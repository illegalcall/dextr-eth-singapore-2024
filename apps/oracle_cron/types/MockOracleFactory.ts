/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers'
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers'
import type { NonPayableOverrides } from './common'
import type {
  OracleClientMock,
  OracleClientMockInterface,
} from './MockOracleClient'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ISupraSValueFeed',
        name: '_sValueFeed',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'OracleClient__InvaildOp',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pair1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_pair2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'operation',
        type: 'uint256',
      },
    ],
    name: 'getAllPricesForPair',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'token1Price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token1Decimals',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token2Price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'token2Decimals',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relativePrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relativeDecimals',
            type: 'uint256',
          },
        ],
        internalType: 'struct TokenPairPriceFeed',
        name: 'tppf',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pair_id_1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'pair_id_2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'operation',
        type: 'uint256',
      },
    ],
    name: 'getDerivedValueOfPair',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'decimals',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_priceIndex',
        type: 'uint256',
      },
    ],
    name: 'getPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'decimals',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSupraSvalueFeed',
    outputs: [
      {
        internalType: 'contract ISupraSValueFeed',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'pairIndexs1',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'pairIndexs2',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'prices',
        type: 'uint256[]',
      },
    ],
    name: 'updateDerivedPricePairValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'pairs',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'decimals',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'prices',
        type: 'uint256[]',
      },
    ],
    name: 'updatePricePairValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISupraSValueFeed',
        name: '_newSValueFeed',
        type: 'address',
      },
    ],
    name: 'updateSupraSvalueFeed',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161093338038061093383398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610847806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610175578063921fcec814610186578063e3f87ee514610199578063e7572230146101ac578063f2fde38b146101d757600080fd5b8063012c4d56146100a357806317fee91f1461010b5780632fe8b0591461013357806339d4802f14610148578063715018a61461016d575b600080fd5b6100b66100b136600461077b565b6101ea565b6040516101029190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b60405180910390f35b61011e61011936600461077b565b61029f565b60408051928352602083019190915201610102565b6101466101413660046106da565b6102fb565b005b6001546001600160a01b03165b6040516001600160a01b039091168152602001610102565b6101466103f6565b6000546001600160a01b0316610155565b6101466101943660046106da565b61040a565b6101466101a73660046106b6565b6104c3565b61011e6101ba366004610762565b600090815260026020526040902060038101546001909101549091565b6101466101e53660046106b6565b6104ed565b6102236040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b50506040805160c081018252600084815260026020818152848320600380820154865260019182015483870152878552838352868520808201548789015282015460608701526080860185815260a087018681529986529083528685208886528084529685209182015490529590925292905291015490915290565b60008082158015906102b2575082600114155b156102d057604051636d6c9a3160e01b815260040160405180910390fd5b5050506000918252600360209081526040808420928452919052902060018101546002909101549091565b60005b83518110156103f057818181518110610319576103196107d0565b602002602001015160036000868481518110610337576103376107d0565b602002602001015181526020019081526020016000206000858481518110610361576103616107d0565b6020026020010151815260200190815260200160002060010181905550601260036000868481518110610396576103966107d0565b6020026020010151815260200190815260200160002060008584815181106103c0576103c06107d0565b602002602001015181526020019081526020016000206002018190555080806103e8906107a7565b9150506102fe565b50505050565b6103fe61056b565b61040860006105c5565b565b60005b83518110156103f057818181518110610428576104286107d0565b602002602001015160026000868481518110610446576104466107d0565b6020026020010151815260200190815260200160002060030181905550828181518110610475576104756107d0565b602002602001015160026000868481518110610493576104936107d0565b602002602001015181526020019081526020016000206001018190555080806104bb906107a7565b91505061040d565b6104cb61056b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6104f561056b565b6001600160a01b03811661055f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610568816105c5565b50565b6000546001600160a01b031633146104085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610556565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f83011261062657600080fd5b8135602067ffffffffffffffff80831115610643576106436107e6565b8260051b604051601f19603f83011681018181108482111715610668576106686107e6565b6040528481528381019250868401828801850189101561068757600080fd5b600092505b858310156106aa57803584529284019260019290920191840161068c565b50979650505050505050565b6000602082840312156106c857600080fd5b81356106d3816107fc565b9392505050565b6000806000606084860312156106ef57600080fd5b833567ffffffffffffffff8082111561070757600080fd5b61071387838801610615565b9450602086013591508082111561072957600080fd5b61073587838801610615565b9350604086013591508082111561074b57600080fd5b5061075886828701610615565b9150509250925092565b60006020828403121561077457600080fd5b5035919050565b60008060006060848603121561079057600080fd5b505081359360208301359350604090920135919050565b60006000198214156107c957634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461056857600080fdfea2646970667358221220cb48334ad688dcf20aa60c7a5232f5f0bb7e7ae7d904ec0bb1a18f64d86c529164736f6c63430008070033'

type OracleClientMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: OracleClientMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class OracleClientMock__factory extends ContractFactory {
  constructor(...args: OracleClientMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    _sValueFeed: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_sValueFeed, overrides || {})
  }
  override deploy(
    _sValueFeed: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_sValueFeed, overrides || {}) as Promise<
      OracleClientMock & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): OracleClientMock__factory {
    return super.connect(runner) as OracleClientMock__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OracleClientMockInterface {
    return new Interface(_abi) as OracleClientMockInterface
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OracleClientMock {
    return new Contract(address, _abi, runner) as unknown as OracleClientMock
  }
}
